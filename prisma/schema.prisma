generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

// Models
model User {
  id             String  @id @default(uuid())
  username       String  @unique
  password       String
  name           String  @db.VarChar(50)
  email          String  @unique @db.VarChar(50)
  phoneNumber    String  @db.VarChar(20)
  profilePicture String?

  reviews  Review[]
  bookings Booking[]
}

model Review {
  id         String  @id @default(uuid())
  userId     String
  propertyId String
  rating     Int
  comment    String? @db.VarChar(1000)

  reviewCreator    User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  reviewedProperty Property @relation(fields: [propertyId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@index([userId])
  @@index([propertyId])
}

model Booking {
  id             String        @id @default(uuid())
  userId         String
  propertyId     String
  createdAt      DateTime      @default(now())
  checkinDate    DateTime
  checkoutDate   DateTime
  numberOfGuests Int
  totalPrice     Decimal       @db.Decimal(10, 2)
  bookingStatus  BookingStatus @default(pending)

  bookingCreator User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  bookedProperty Property @relation(fields: [propertyId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@index([userId])
  @@index([propertyId])
}

model Host {
  id             String  @id @default(uuid())
  username       String  @unique
  password       String
  name           String  @db.VarChar(50)
  email          String  @unique @db.VarChar(50)
  phoneNumber    String  @db.VarChar(20)
  profilePicture String?
  aboutMe        String? @db.VarChar(5000)

  listings Property[]
}

model Property {
  id            String   @id @default(uuid())
  hostId        String
  title         String   @db.VarChar(200)
  description   String   @db.VarChar(5000)
  location      String   @db.VarChar(50)
  pricePerNight Decimal  @db.Decimal(10, 2)
  bedroomCount  Int
  bathRoomCount Int
  maxGuestCount Int
  rating        Int //I have decided here to calculate the average in stead of just passing a value even thoug this was not required, have however left rating in the schema in order to fulfill the test.
  updatedAt     DateTime @updatedAt

  amenities Amenity[]
  host      Host      @relation(fields: [hostId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  bookings  Booking[]
  reviews   Review[]

  @@index([hostId])
}

model Amenity {
  id       String     @id @default(uuid())
  name     String     @db.VarChar(50)
  listings Property[]
}

enum BookingStatus {
  confirmed
  pending
  canceled
  updated
}
